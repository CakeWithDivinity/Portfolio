---
import { getCollection } from "astro:content";
import Workplace from "./Workplace.astro";

const workplaces = await getCollection("workplaces").then((workplaces) => {
  workplaces.sort((a, b) => (a.data.from < b.data.from ? 1 : -1));
  return workplaces;
});
---

<style>
  section {
    margin-top: 3rem;
  }

  h1 {
    text-align: center;
    margin-bottom: 1rem;
  }

  .experiences {
    background-color: #23283a;
    padding: 1rem;
    border-radius: 1.5rem;
    box-shadow: 0px 10px 50px rgb(0 0 0 / 30%);
  }

  .toggles {
    margin-bottom: 1rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--secondary);
    display: flex;
    justify-content: center;
    gap: 1.5ch;
    flex-wrap: wrap;
    align-items: center;
  }

  .workplace-toggle {
    cursor: pointer;
    border-bottom: 1px solid transparent;
  }

  .workplace-toggle::after {
    content: " ";
    display: block;
    transform: scaleX(0);
    transition: all 0.2s ease-in-out;
    height: 2px;
  }

  .workplace-toggle:hover::after {
    background-color: var(--secondary);
    transform: scaleX(1);
  }

  .workplace-toggle.active::after {
    background-color: var(--primary);
    transform: scaleX(1);
  }

  .content {
    overflow-x: hidden;
    width: 100%;
  }
</style>

<section id="experience">
  <h1>Experience</h1>

  <div class="experiences">
    <div class="toggles">
      {
        workplaces.map((workplace, i) => (
          <p class:list={["workplace-toggle", { active: i === 0 }]}>
            {workplace.data.jobTitle}
          </p>
        ))
      }
    </div>

    <div class="content">
      {workplaces.map((workplace) => <Workplace workplace={workplace} />)}
    </div>
  </div>
</section>

<script>
  const toggles = document.querySelectorAll(".workplace-toggle");
  const workplaces = document.querySelectorAll(
    ".workplace"
  ) as NodeListOf<HTMLElement>;

  workplaces[0].classList.add("visible");

  toggles.forEach((workplaceToggle, index) => {
    workplaceToggle.addEventListener("click", () => {
      toggles.forEach((toggle) => toggle.classList.remove("active"));
      workplaceToggle.classList.add("active");

      workplaces.forEach((workplace, workplaceIndex) => {
        if (workplaceIndex === index) {
          workplace.classList.add("visible");
        } else {
          workplace.classList.remove("visible");
        }
      });
    });
  });
</script>
